name: Create Place Light Package

on:
  workflow_dispatch:
  release:
    types: [published]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Validate json
        uses: cardinalby/schema-validator-action@v3
        with:
          schema: https://raw.githubusercontent.com/FlayaN/LightPlacer-VR/refs/heads/json-schema/schema.json
          file: package/**/LightPlacer/**/*.json
      
      - name: Download release archive
        uses: robinraju/release-downloader@v1
        with:
          repository: 'Mutagen-Modding/Spriggit'
          latest: true
          zipBall: true
          fileName: 'SpriggitLinuxCLI.zip'
          out-file-path: './downloads'
      
      - name: Extract archive
        run: unzip ./downloads/SpriggitLinuxCLI.zip -d ./SpriggitCLI

      - name: Prepare dist directory
        run: |
          if [ -d "dist" ]; then
            rm -rf dist
          else
            mkdir dist
          fi

      - name: Copy package to dist excluding files
        run: |
          mkdir -p dist
          rsync -av --exclude-from='exclusions.txt' package/ dist/

      - name: Set permissions for Spriggit executable
        run: chmod +x ./SpriggitCLI/Spriggit.CLI

      - name: List directory contents for debugging
        run: |
          echo "Contents of ./SpriggitCLI:"
          ls -l ./SpriggitCLI
          echo "Contents of current directory:"
          pwd
          ls -l

      - name: Run Spriggit fake deserialization until Spriggit bug is fixed
        continue-on-error: true
        run: |
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/PL - Bright" -o "./dist/PL - Bright.esp"

      - name: Fake Spriggit until Spriggit bug is fixed
        continue-on-error: true
        run: |
          cp /tmp/Spriggit/Translations/Spriggit.Json.Skyrim/0.36.13/Spriggit.Json.Skyrim /tmp/Spriggit/Translations/Spriggit.Json.Skyrim/0.36.13/Spriggit.Json.Skyrim.exe
          chmod +x /tmp/Spriggit/Translations/Spriggit.Json.Skyrim/0.36.13/Spriggit.Json.Skyrim.exe
      
      - name: Run Spriggit deserialization
        run: |
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/PL - Bright" -o "./dist/PL - Bright.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/PL - Dark" -o "./dist/PL - Dark.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/PL - Default" -o "./dist/PL - Default.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/PL - Nightmare" -o "./dist/PL - Nightmare.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Placed Light" -o "./dist/Placed Light.esm"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Placed Light - Shadows and Ambient" -o "./dist/Placed Light - Shadows and Ambient.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Placed Light Exteriors" -o "./dist/Placed Light Exteriors.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Misc Patches/Carbon LightBulbs Edit" -o "./dist/Misc Patches/Carbon LightBulbs Edit.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Misc Patches/NOTWL - Lanterns" -o "./dist/Misc Patches/NOTWL - Lanterns.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Misc Patches/Placed Light - Creation Club" -o "./dist/Misc Patches/Placed Light - Creation Club.esp"
          ./SpriggitCLI/Spriggit.CLI deserialize -i "./Spriggit/Misc Patches/Placed Light Exteriors - NOTWL 3 patch" -o "./dist/Misc Patches/Placed Light Exteriors - NOTWL 3 patch.esp"

  update-fomod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: extract_version
        run: echo "::set-output name=VERSION::${GITHUB_REF##*/}"

      - name: Update FOMOD XML with version
        run: |
          VERSION=$(echo "${{ steps.extract_version.outputs.VERSION }}" | sed 's/^v//')
          xmlstarlet ed --inplace -u '//Version' -v "$VERSION" dist/fomod/info.xml

      - name: Commit and push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add path/to/your/file.xml
          git commit -m "Update XML version to ${{ steps.extract_version.outputs.VERSION }}"
          git push origin HEAD

  archive:
    runs-on: ubuntu-latest
    needs: [validate, update-fomod]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Archive dist directory
        run: |
          zip -r PlacedLight.zip dist
          mv PlacedLight.zip ./downloads

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: PlacedLight
